[tox]
envlist = py311, lint, coverage, security
isolated_build = True
skip_missing_interpreters = True

[testenv]
deps = -r requirements-dev.txt
setenv =
    TESTING = true
    LOG_LEVEL = WARNING
    PYTHONPATH = {toxinidir}/src
commands =
    python tests/test_runner.py fast

[testenv:py311]
basepython = python3.11
commands =
    python tests/test_runner.py all --html

[testenv:unit]
commands =
    python tests/test_runner.py unit --parallel

[testenv:integration]
commands =
    python tests/test_runner.py integration

[testenv:e2e]
commands =
    python tests/test_runner.py e2e

[testenv:performance]
commands =
    python tests/test_runner.py performance

[testenv:gpu]
commands =
    python tests/test_runner.py gpu
setenv =
    {[testenv]setenv}
    SKIP_GPU_TESTS = false

[testenv:external]
commands =
    python tests/test_runner.py external
setenv =
    {[testenv]setenv}
    SKIP_EXTERNAL_TESTS = false

[testenv:lint]
deps = 
    -r requirements-dev.txt
    pylint
    mypy
    flake8
    black
commands =
    black --check src/ tests/
    pylint src/ --rcfile=.pylintrc
    mypy src/ --config-file=pyproject.toml
    flake8 src/ --config=.flake8

[testenv:format]
deps = black
commands =
    black src/ tests/

[testenv:coverage]
commands =
    python -m pytest tests/ --cov=src --cov-report=term-missing --cov-report=html --cov-report=xml

[testenv:security]
deps =
    bandit
    safety
commands =
    bandit -r src/ -ll
    safety check

[testenv:docs]
deps =
    sphinx
    sphinx-rtd-theme
commands =
    sphinx-build -b html docs docs/_build/html

[testenv:clean]
deps =
commands =
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('reports', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.coverage', ignore_errors=True)"
    python -c "import os; os.remove('coverage.xml') if os.path.exists('coverage.xml') else None"

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude = .git,__pycache__,docs/source/conf.py,old,build,dist,.venv,.tox
per-file-ignores =
    __init__.py:F401
    tests/*:S101,S106

[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */conftest.py
branch = true

[coverage:report]
show_missing = true
precision = 2
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.: